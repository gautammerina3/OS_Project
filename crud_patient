echo "Select your choice"
echo "1.Add a patient's full record"
echo "2.Update a patient's full record"
echo "3.Delete patient's record"
echo "4.Search patient"
read choice
#-----------------------------------------------------------------------------------#
#-----------------------------------------------------------------------------------#
#ADD RECORDS
if [[ "$choice" -eq 1 ]]
then
#Regex Check
name_regex="[^a-zA-Z ]+"
department_regex="[^a-zA-Z ]+"
doc_name_regex="[^a-zA-Z ]+"
doc_id_regex="[^0-9]+"

echo "Please add the following patient details"
echo "Enter patient name"
read patient_name

if [[ "$patient_name" =~ $name_regex ]]
then
echo "Please enter a valid name"
exit 1
fi

echo "Enter department where patient is admitted"
read department

if [[ "$department" =~ $department_regex ]]
then
echo "Please enter a valid department"
exit 1
fi

echo "Enter doctor's name for patient"
read doctor_name

if [[ "$doctor_name" =~ $doc_name_regex ]]
then
echo "Please enter a valid name"
exit 1
fi 
#Might have to do ask doctor_id and get doctor name from doctor table based on id
#Might have to do ask doctor_id and get doctor name from doctor table based on id
echo "Enter doc id"
read doctor_id

if [[ "$doctor_id" =~ $doc_id_regex ]]
then
echo "Please enter a valid doc id"
exit 1
fi


#ADD RECORDS
filename=patients.csv
#Check if file ends with new line and add records appropriately
if [ ! -s "$filename" ]; then
  printf "%s%s%s%s%s\n" $RANDOM,$patient_name,"$department",$doctor_name,$doctor_id >> patients.csv
elif [ -z "$(tail -c 1 <"$filename")" ]; then
  printf "%s%s%s%s%s\n" $RANDOM,$patient_name,"$department",$doctor_name,$doctor_id >> patients.csv
else
  printf "\n%s%s%s%s%s\n" $RANDOM,$patient_name,"$department",$doctor_name,$doctor_id >> patients.csv
fi

echo " Patient's details added! "
./menu

#-----------------------------------------------------------------------------------#
#-----------------------------------------------------------------------------------#
#UPDATE RECORDS
elif [[ "$choice" -eq 2 ]]
then
#Update code
patient_regex="[^a-zA-Z0-9 ]+"
number_regex="[^0-9 ]+"

echo "Please add the following patient details"

echo "Enter patient's id to edit"
read patient_id

echo "Enter new patient name"
read patient_name

if [[ "$patient_name" =~ $patient_regex ]]
then
echo "Please enter a valid name"
exit 1
fi

echo "Enter department where patient is admitted"
read department

if [[ "$department" =~ $department_regex ]]
then
echo "Please enter a valid department"
exit 1
fi

echo "Enter doctor's name for patient"
read doctor_name

if [[ "$doctor_name" =~ $doc_name_regex ]]
then
echo "Please enter a valid name"
exit 1
fi 
#Might have to do ask doctor_id and get doctor name from doctor table based on id
#Might have to do ask doctor_id and get doctor name from doctor table based on id
echo "Enter doc id"
read doctor_id

if [[ "$doctor_id" =~ $doc_id_regex ]]
then
echo "Please enter a valid doc id"
exit 1
fi

awk -F, -v patient_id="$patient_id" -v patient_name="$patient_name" -v department="$department" -v doctor_name="$doctor_name" -v doctor_id="$doctor_id" 'BEGIN {OFS=FS} {
   if($1 == patient_id) {
    $2=patient_name;
    $3=department;
    $4=doctor_name;
    $5=doctor_id;
    }
    }1' patients.csv > patients.tmp && mv patients.tmp patients.csv

echo "Patient's record updated!"
./menu

#-----------------------------------------------------------------------------------#
#-----------------------------------------------------------------------------------#
#DELETE PATIENT
elif [[ "$choice" -eq 3 ]]
then
echo "Enter patient's id"
read patient_id
echo " Do you want delete patient's record for ID $patient_id(y/n)"
read c1
if [ "$c1" = y ]
then
awk -v patient_id=$patient_id -F, '$1 != patient_id' patients.csv > patients.tmp && mv patients.tmp patients.csv
echo "Record deleted!"
./menu
else
echo "Record not deleted!"
./menu
fi
#---------------------------------------------

else
echo "Incorrect Entry"
./menu
#--------------------------------------------
fi