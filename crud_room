echo "Select your choice"
echo "1. Add a ROOM's record"
echo "2. Update a ROOM's full record"
echo "3. Delete ROOM's record"
echo "4. Display room's record"
echo "Enter your choice:"
read choice 
#-----------------------------------------------------------------------------------#
#-----------------------------------------------------------------------------------#
#ADD RECORDS
if [[ "$choice" -eq 1 ]]
then
#Regex Check
type_regex="[^a-zA-Z ]+"
size_regex="[^0-9]+"
no_of_beds_regex="[^0-9]+"
building_id_regex="[^0-9]+"


echo "Please add the following room details"
echo "Enter room type"
read room_type

if [[ "$room_type" =~ $type_regex ]]
then
echo "Please enter a valid type"
exit 1
fi

echo "Enter room's size"
read room_size

if [[ "$room_size" =~ $size_regex ]]
then
echo "Please enter a valid size"
exit 1
fi

echo "Enter no of beds in room"
read no_of_beds

if [[ "$no_of_beds" =~ $no_of_beds_regex ]]
then
echo "Please enter a valid number of beds"
exit 1
fi

echo "Enter building id"
read building_id

if [[ "$building_id" =~ $building_id_regex ]]
then
echo "Please enter a valid building id"
exit 1
fi


#ADD RECORDS
filename=rooms.csv
#Check if file ends with new line and add records appropriately
if [ ! -s "$filename" ]; then
  printf "%s%s%s%s%s\n" $RANDOM,$room_type,"$room_size",$no_of_beds,$building_id >> rooms.csv
elif [ -z "$(tail -c 1 <"$filename")" ]; then
  printf "%s%s%s%s%s\n" $RANDOM,$room_type,"$room_size",$no_of_beds,$building_id >> rooms.csv
else
  printf "\n%s%s%s%s%s\n" $RANDOM,$room_type,"$room_size",$no_of_beds,$building_id >> rooms.csv
fi

echo " Room's details added! "
./menu
exit;

#-----------------------------------------------------------------------------------#
#-----------------------------------------------------------------------------------#
#UPDATE RECORDS
elif [[ "$choice" -eq 2 ]]
then
#Update code
room_regex="[^a-zA-Z0-9 ]+"
number_regex="[^0-9 ]+"

echo "Please add the following room details"

echo "Enter room's id to edit"
read room_id

echo "Enter new room type"
read room_type

if [[ "$room_type" =~ $room_regex ]]
then
echo "Please enter a valid room type"
exit 1
fi

echo "Enter room size"
read room_size

if [[ "$room_size" =~ $number_regex ]]
then
echo "Please enter a size in sq. ft."
exit 1
fi

echo "Enter no. of beds in the room"
read no_of_beds

if [[ "$no_of_beds" =~ $number_regex ]]
then
echo "Please enter a number of beds"
exit 1
fi 

echo "Enter the building id"
read building_id

if [[ "$building_id" =~ $number_regex ]]
then
echo "Please enter a valid building id"
exit 1
fi

awk -F, -v room_id="$room_id" -v room_type="$room_type" -v room_size="$room_size" -v no_of_beds="$no_of_beds" -v building_id="$building_id" 'BEGIN {OFS=FS} {
   if($1 == room_id) {
    $2=room_type;
    $3=room_size;
    $4=no_of_beds;
    $5=building_id;
    }
    }1' rooms.csv > rooms.tmp && mv rooms.tmp rooms.csv

echo "Room's record updated!"
./menu
exit;
#-----------------------------------------------------------------------------------#
#-----------------------------------------------------------------------------------#
#DELETE RECORDS
elif [[ "$choice" -eq 3 ]]
then
echo "Enter room's id"
read room_id
echo " Do you want to delete room's record for ID $room_id(y/n)"
read c1
if [ "$c1" = y ]
then
awk -v room_id=$room_id -F, '$1 != room_id' rooms.csv > rooms.tmp && mv rooms.tmp rooms.csv
echo "Record deleted!"
./menu
exit;
else
echo "Record not deleted!"
./menu
exit;
fi
#---------------------------------------------
#-----------------------------------------------------------------------------------#
#-----------------------------------------------------------------------------------#
#SEARCH RECORDS
elif [[ "$choice" -eq 4 ]]
then
./display_room;

else
echo "Incorrect Entry"
#--------------------------------------------
fi